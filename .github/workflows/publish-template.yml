name: Publish Template

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'README.md'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'README.md'
  workflow_dispatch:
    inputs:
      template:
        description: 'Template to build'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - dbt-fusion
        - dbt-cloud-cli

jobs:
  # Determine which templates to build
  setup:
    runs-on: ubuntu-latest
    outputs:
      templates: ${{ steps.set-matrix.outputs.templates }}
    steps:
      - name: Set matrix strategy
        id: set-matrix
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ "${{ github.event.inputs.template }}" == "all" ]]; then
              echo "templates=[\"dbt-fusion\", \"dbt-cloud-cli\"]" >> $GITHUB_OUTPUT
            else
              echo "templates=[\"${{ github.event.inputs.template }}\"]" >> $GITHUB_OUTPUT
            fi
          else
            echo "templates=[\"dbt-fusion\", \"dbt-cloud-cli\"]" >> $GITHUB_OUTPUT
          fi

  publish-staging:
    if: github.event_name == 'pull_request'
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        template: ${{ fromJson(needs.setup.outputs.templates) }}
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.template }}
          tags: |
            type=ref,event=pr,prefix=pr-
            type=raw,value=staging

      - name: Build and push staging template
        uses: docker/build-push-action@v5
        with:
          context: ./src/${{ matrix.template }}
          file: ./src/${{ matrix.template }}/.devcontainer/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  
  publish:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        template: ${{ fromJson(needs.setup.outputs.templates) }}
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.template }}
          tags: |
            type=ref,event=branch
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-

      - name: Build and push template
        uses: docker/build-push-action@v5
        with:
          context: ./src/${{ matrix.template }}
          file: ./src/${{ matrix.template }}/.devcontainer/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max